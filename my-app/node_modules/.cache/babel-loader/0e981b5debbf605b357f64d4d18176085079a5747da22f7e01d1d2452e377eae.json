{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANITAH\\\\Desktop\\\\my-app\\\\src\\\\Component\\\\auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// auth.js\n\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create context for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Hook to use AuthContext\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider component to wrap your application with\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n\n  // Initialize user state\n\n  // Example login function (replace with your actual login logic)\n  const login = async (email, password) => {\n    if (\"User successfully logged in\") {\n      setUser({\n        email,\n        password\n      }); // Update the user state\n    }\n    // Implement your login logic here\n  };\n\n  // Example logout function (replace with your actual logout logic)\n  const logout = async () => {\n    // Implement your logout logic here\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = !!user;\n\n  // Value object for AuthContext\n  const authContextValue = {\n    user,\n    login,\n    logout,\n    isAuthenticated\n  };\n\n  // Provide the AuthContext with its value to the entire app\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","login","email","password","logout","isAuthenticated","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ANITAH/Desktop/my-app/src/Component/auth.js"],"sourcesContent":["// auth.js\r\n\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\n// Create context for authentication\r\nexport const AuthContext = createContext();\r\n\r\n// Hook to use AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// AuthProvider component to wrap your application with\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  \r\n   // Initialize user state\r\n\r\n  // Example login function (replace with your actual login logic)\r\n  const login = async (email, password) => {\r\n     if (\"User successfully logged in\") {\r\n      setUser({ email, password }); // Update the user state\r\n    }\r\n    // Implement your login logic here\r\n  };\r\n\r\n  // Example logout function (replace with your actual logout logic)\r\n  const logout = async () => {\r\n    // Implement your logout logic here\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = !!user;\r\n\r\n  // Value object for AuthContext\r\n  const authContextValue = {\r\n    user,\r\n    login,\r\n    logout,\r\n    isAuthenticated,\r\n  };\r\n\r\n  // Provide the AuthContext with its value to the entire app\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAErC;;EAED;EACA,MAAMW,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtC,IAAI,6BAA6B,EAAE;MAClCH,OAAO,CAAC;QAAEE,KAAK;QAAEC;MAAS,CAAC,CAAC,CAAC,CAAC;IAChC;IACA;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB;EAAA,CACD;;EAED;EACA,MAAMC,eAAe,GAAG,CAAC,CAACN,IAAI;;EAE9B;EACA,MAAMO,gBAAgB,GAAG;IACvBP,IAAI;IACJE,KAAK;IACLG,MAAM;IACNC;EACF,CAAC;;EAED;EACA,oBACEb,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAEF,gBAAiB;IAAAT,QAAA,EAC3CA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,GAAA,CAnCWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}