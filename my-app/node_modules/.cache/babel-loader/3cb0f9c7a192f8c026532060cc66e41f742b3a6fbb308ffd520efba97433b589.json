{"ast":null,"code":"import React,{createContext,useState,useEffect,useCallback}from'react';// Create the context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Create a provider component\nconst AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);// Function to log in a user\nconst login=async(email,password)=>{try{const response=await fetch('http://127.0.0.1:5000/api/v1/user/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(response.ok){setUser(data.user);// Adjust this based on your API response\nlocalStorage.setItem('token',data.token);// Save the token in localStorage\n}else{throw new Error(data.message||'Failed to log in');}}catch(error){console.error('Login error:',error);}};// Function to log out a user\nconst logout=()=>{setUser(null);localStorage.removeItem('token');// Remove the token from localStorage\n};// Function to check if a user is authenticated\nconst isAuthenticated=()=>!!user;// Function to fetch user data based on stored token\nconst fetchUserData=useCallback(async()=>{const token=localStorage.getItem('token');if(token){try{const response=await fetch('http://127.0.0.1:5000/api/v1/user/me',{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)}});const data=await response.json();if(response.ok){setUser(data.user);// Adjust this based on your API response\n}else{logout();// Log out if the token is invalid\n}}catch(error){console.error('Fetch user data error:',error);logout();}}},[]);// Fetch user data when the component mounts\nuseEffect(()=>{fetchUserData();},[fetchUserData]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,isAuthenticated},children:children});};export{AuthContext,AuthProvider};","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","login","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","Error","message","error","console","logout","removeItem","isAuthenticated","fetchUserData","getItem","concat","Provider","value"],"sources":["C:/Users/ANITAH/Desktop/my-app/src/Component/auth.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\n\r\n// Create the context\r\nconst AuthContext = createContext();\r\n\r\n// Create a provider component\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Function to log in a user\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/api/v1/user/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setUser(data.user); // Adjust this based on your API response\r\n        localStorage.setItem('token', data.token); // Save the token in localStorage\r\n      } else {\r\n        throw new Error(data.message || 'Failed to log in');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  // Function to log out a user\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token'); // Remove the token from localStorage\r\n  };\r\n\r\n  // Function to check if a user is authenticated\r\n  const isAuthenticated = () => !!user;\r\n\r\n  // Function to fetch user data based on stored token\r\n  const fetchUserData = useCallback(async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/api/v1/user/me', {\r\n          method: 'GET',\r\n          headers: { 'Authorization': `Bearer ${token}` },\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setUser(data.user); // Adjust this based on your API response\r\n        } else {\r\n          logout(); // Log out if the token is invalid\r\n        }\r\n      } catch (error) {\r\n        console.error('Fetch user data error:', error);\r\n        logout();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Fetch user data when the component mounts\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, [fetchUserData]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, isAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAE9E;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC;AACA,KAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAEtC;AACA,KAAM,CAAAW,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC,CAAE,CACtEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CACF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,GAAIR,QAAQ,CAACS,EAAE,CAAE,CACfb,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC,CAAE;AACpBe,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,IAAI,CAACK,KAAK,CAAC,CAAE;AAC7C,CAAC,IAAM,CACL,KAAM,IAAI,CAAAC,KAAK,CAACN,IAAI,CAACO,OAAO,EAAI,kBAAkB,CAAC,CACrD,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACtC,CACF,CAAC,CAED;AACA,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACnBrB,OAAO,CAAC,IAAI,CAAC,CACbc,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAAE;AACpC,CAAC,CAED;AACA,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAAC,CAACxB,IAAI,CAEpC;AACA,KAAM,CAAAyB,aAAa,CAAGhC,WAAW,CAAC,SAAY,CAC5C,KAAM,CAAAwB,KAAK,CAAGF,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIT,KAAK,CAAE,CACT,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sCAAsC,CAAE,CACnEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,eAAe,WAAAmB,MAAA,CAAYV,KAAK,CAAG,CAChD,CAAC,CAAC,CACF,KAAM,CAAAL,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,GAAIR,QAAQ,CAACS,EAAE,CAAE,CACfb,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC,CAAE;AACtB,CAAC,IAAM,CACLsB,MAAM,CAAC,CAAC,CAAE;AACZ,CACF,CAAE,MAAOF,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CE,MAAM,CAAC,CAAC,CACV,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA9B,SAAS,CAAC,IAAM,CACdiC,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,CAACA,aAAa,CAAC,CAAC,CAEnB,mBACE9B,IAAA,CAACC,WAAW,CAACgC,QAAQ,EAACC,KAAK,CAAE,CAAE7B,IAAI,CAAEE,KAAK,CAAEoB,MAAM,CAAEE,eAAgB,CAAE,CAAAzB,QAAA,CACnEA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,OAASH,WAAW,CAAEC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}